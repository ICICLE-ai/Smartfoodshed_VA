{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\"; // import RightClickMenu from \"@/components/RightClickMenu\";\n// import InoutputBtns from \"@/components/InoutputBtns\";\n\nexport default {\n  data: function data() {\n    return {\n      dataStatus: false,\n      resizeX: undefined,\n      resizeY: undefined,\n      // draggable: true,\n      width: 500,\n      height: 1000,\n      resizeWidth: 0,\n      //\n      resizeHeight: 0,\n      marginTop: 0,\n      marginLeft: 0,\n      topMargin: window.innerHeight / 2,\n      leftMargin: window.innerWidth / 2,\n      resizingStatus: false,\n      //   showRightClickMenu: false,\n      rightMenuX: 0,\n      rightMenuY: 0,\n      loadingStatus: undefined,\n      componentId: \"tabular-0\",\n      // for right click menu\n      items: [{\n        title: \"Remove node\"\n      }],\n      container: \".documents-components-list\",\n      selected: [],\n      sheets: [],\n      currentDataBase: [],\n      answerBasedRetrieval: {},\n      flag: false,\n      tableItemKey: \"\",\n      //-----\n      search: \"\",\n      calories: '',\n      desserts: [],\n      headers: [],\n      selected_rows: [],\n      singleSelect: false,\n      sheetNames: [],\n      tab: null,\n      sheetItemKey: null,\n      currentSheet: null,\n      currentData: null\n    };\n  },\n  methods: {\n    dragStart: function dragStart(e) {\n      var el = document.querySelector(\"#\".concat(e.target.id));\n      var initialLeft = parseInt(el.style.left.split(\"px\")[0]) - e.clientX;\n      var initialTop = parseInt(el.style.top.split(\"px\")[0]) - e.clientY;\n      e.dataTransfer.setData(\"item-id\", e.target.id);\n      e.dataTransfer.setData(\"initialLeft\", initialLeft);\n      e.dataTransfer.setData(\"initialTop\", initialTop);\n      this.$store.dispatch(\"changeCurrentDraggingVM\", this);\n    },\n    mouseDownHandler: function mouseDownHandler(e) {\n      // this.$store.dispatch('changeResizerStatus', true);\n      this.resizeX = e.clientX;\n      this.resizeY = e.clientY;\n      document.addEventListener(\"mousemove\", this.mouseMoveHandler);\n      document.addEventListener(\"mouseup\", this.mouseUpHandler);\n      this.resizingStatus = true;\n    },\n    mouseMoveHandler: function mouseMoveHandler(e) {\n      var dx = e.clientX - this.resizeX;\n      var dy = e.clientY - this.resizeY;\n      this.width = this.resizeWidth + dx;\n      this.height = this.resizeHeight + dy;\n    },\n    mouseUpHandler: function mouseUpHandler(e) {\n      this.resizeWidth = this.width;\n      this.resizeHeight = this.height;\n      document.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", this.mouseUpHandler); // this.$store.dispatch('changeResizerStatus', false)\n\n      this.resizingStatus = false;\n    },\n    rightClickMenuShow: function rightClickMenuShow(e) {\n      e.preventDefault();\n      this.showRightClickMenu = true;\n      this.rightMenuX = e.clientX;\n      this.rightMenuY = e.clientY;\n    }\n  },\n  created: function created() {\n    // Initialize initial position\n    this.marginTop = 50;\n    this.marginLeft = 100;\n    this.resizeWidth = this.width;\n    this.resizeHeight = this.height;\n  },\n  computed: {\n    // Determine Whether the component is draggable\n    // Not allowed when resizing and drawling link\n    draggable: function draggable() {\n      return !this.resizingStatus;\n    }\n  },\n  components: {},\n  watch: {\n    height: function height(newVal) {\n      this.$store.dispatch('containerSizeChange', {\n        'container': 'tableContainer',\n        'height': this.height\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,gC,CACA;AACA;;AACA;AACAA,MADA,kBACA;AACA;AACAC,uBADA;AAEAC,wBAFA;AAGAC,wBAHA;AAIA;AACAC,gBALA;AAMAC,kBANA;AAOAC,oBAPA;AAOA;AACAC,qBARA;AASAC,kBATA;AAUAC,mBAVA;AAWAC,uCAXA;AAYAC,uCAZA;AAaAC,2BAbA;AAeA;AACAC,mBAhBA;AAiBAC,mBAjBA;AAkBAC,8BAlBA;AAmBAC,8BAnBA;AAoBA;AACAC;AAAAC;AAAA,QArBA;AAuBAC,6CAvBA;AAyBAC,kBAzBA;AA2BAC,gBA3BA;AA6BAC,yBA7BA;AA8BAC,8BA9BA;AA+BAC,iBA/BA;AAgCAC,sBAhCA;AAiCA;AACAC,gBAlCA;AAmCAC,kBAnCA;AAoCAC,kBApCA;AAqCAC,iBArCA;AAuCAC,uBAvCA;AAwCAC,yBAxCA;AAyCAC,oBAzCA;AA0CAC,eA1CA;AA2CAC,wBA3CA;AA4CAC,wBA5CA;AA6CAC;AA7CA;AA+CA,GAjDA;AAkDAC;AACAC,aADA,qBACAC,CADA,EACA;AACA;AACA;AACA;AACAA;AACAA;AACAA;AACA;AACA,KATA;AAWAC,oBAXA,4BAWAD,CAXA,EAWA;AACA;AACA;AACA;AACAE;AACAA;AACA;AACA,KAlBA;AAoBAC,oBApBA,4BAoBAH,CApBA,EAoBA;AACA;AACA;AACA;AACA;AACA,KAzBA;AA2BAI,kBA3BA,0BA2BAJ,CA3BA,EA2BA;AACA;AACA;AACAE;AACAA,mEAJA,CAKA;;AACA;AACA,KAlCA;AAoCAG,sBApCA,8BAoCAL,CApCA,EAoCA;AACAA;AACA;AACA;AACA;AACA;AAzCA,GAlDA;AA+FAM,SA/FA,qBA+FA;AACA;AACA;AACA;AACA;AACA;AACA,GArGA;AAuGAC;AACA;AACA;AACAC,aAHA,uBAGA;AACA;AACA;AALA,GAvGA;AA+GAC,gBA/GA;AAkHAC;AACA5C,UADA,kBACA6C,MADA,EACA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAlHA","names":["data","dataStatus","resizeX","resizeY","width","height","resizeWidth","resizeHeight","marginTop","marginLeft","topMargin","leftMargin","resizingStatus","rightMenuX","rightMenuY","loadingStatus","componentId","items","title","container","selected","sheets","currentDataBase","answerBasedRetrieval","flag","tableItemKey","search","calories","desserts","headers","selected_rows","singleSelect","sheetNames","tab","sheetItemKey","currentSheet","currentData","methods","dragStart","e","mouseDownHandler","document","mouseMoveHandler","mouseUpHandler","rightClickMenuShow","created","computed","draggable","components","watch","newVal"],"sourceRoot":"src/components","sources":["CTemplate.vue"],"sourcesContent":["<template>\n  <div>\n    <v-hover v-slot=\"{ hover }\">\n      <v-card\n        :elevation=\"hover ? 12 : 5\"\n        class=\"card-tabular\"\n        :draggable=\"draggable\"\n        @dragstart=\"dragStart\"\n        outlined\n        :id=\"componentId\"\n        ref=\"cardComp\"\n        @contextmenu=\"rightClickMenuShow\"\n        :style=\"{\n          top: marginTop + 'px',\n          left: marginLeft + 'px',\n          width: `${width}px`,\n          height: `${height}px`,\n          position: 'absolute',\n        }\"\n      > \n        <slot name=\"core\">\n            <v-card-text class=\"card-name\">\n                Empty Container\n            </v-card-text>      \n        </slot> \n\n        <div class=\"resizer resizer-r\" @mousedown=\"mouseDownHandler\"></div>\n        <div class=\"resizer resizer-b\" @mousedown=\"mouseDownHandler\"></div>\n      </v-card>\n    </v-hover>\n    <!-- <v-menu\n      v-model=\"showRightClickMenu\"\n      :position-x=\"rightMenuX\"\n      :position-y=\"rightMenuY\"\n      absolute\n      offset-y\n    >\n      <RightClickMenu\n        :vue=\"this\"\n        :container=\"container\"\n        :itemProps=\"itemProps\"\n        store=\"documents\"\n      />\n    </v-menu> -->\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n// import RightClickMenu from \"@/components/RightClickMenu\";\n// import InoutputBtns from \"@/components/InoutputBtns\";\nexport default {\n  data() {\n    return {\n      dataStatus: false,\n      resizeX: undefined,\n      resizeY: undefined,\n      // draggable: true,\n      width: 500,\n      height: 1000,\n      resizeWidth: 0, //\n      resizeHeight: 0,\n      marginTop: 0,\n      marginLeft: 0,\n      topMargin: window.innerHeight / 2,\n      leftMargin: window.innerWidth / 2,\n      resizingStatus: false,\n\n    //   showRightClickMenu: false,\n      rightMenuX: 0,\n      rightMenuY: 0,\n      loadingStatus: undefined,\n      componentId: \"tabular-0\",\n      // for right click menu\n      items: [{ title: \"Remove node\" }],\n\n      container: \".documents-components-list\",\n\n      selected: [],\n     \n      sheets: [], \n      \n      currentDataBase: [],\n      answerBasedRetrieval: {},\n      flag: false,\n      tableItemKey: \"\",\n      //-----\n      search: \"\",\n      calories: '', \n      desserts: [],\n      headers: [],\n      \n      selected_rows:[],\n      singleSelect: false,\n      sheetNames: [],\n      tab: null,\n      sheetItemKey: null, \n      currentSheet: null, \n      currentData: null,\n    };\n  },\n  methods: {\n    dragStart(e) {\n      const el = document.querySelector(`#${e.target.id}`);\n      const initialLeft = parseInt(el.style.left.split(\"px\")[0]) - e.clientX;\n      const initialTop = parseInt(el.style.top.split(\"px\")[0]) - e.clientY;\n      e.dataTransfer.setData(\"item-id\", e.target.id);\n      e.dataTransfer.setData(\"initialLeft\", initialLeft);\n      e.dataTransfer.setData(\"initialTop\", initialTop);\n      this.$store.dispatch(\"changeCurrentDraggingVM\", this);\n    },\n\n    mouseDownHandler(e) {\n      // this.$store.dispatch('changeResizerStatus', true);\n      this.resizeX = e.clientX;\n      this.resizeY = e.clientY;\n      document.addEventListener(\"mousemove\", this.mouseMoveHandler);\n      document.addEventListener(\"mouseup\", this.mouseUpHandler);\n      this.resizingStatus = true;\n    },\n\n    mouseMoveHandler(e) {\n      const dx = e.clientX - this.resizeX;\n      const dy = e.clientY - this.resizeY;\n      this.width = this.resizeWidth + dx;\n      this.height = this.resizeHeight + dy;\n    },\n\n    mouseUpHandler(e) {\n      this.resizeWidth = this.width;\n      this.resizeHeight = this.height;\n      document.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", this.mouseUpHandler);\n      // this.$store.dispatch('changeResizerStatus', false)\n      this.resizingStatus = false;\n    },\n\n    rightClickMenuShow(e) {\n      e.preventDefault();\n      this.showRightClickMenu = true;\n      this.rightMenuX = e.clientX;\n      this.rightMenuY = e.clientY;\n    },\n \n  },\n\n  created() {\n    // Initialize initial position\n    this.marginTop = 50;\n    this.marginLeft = 100;\n    this.resizeWidth = this.width;\n    this.resizeHeight = this.height;\n  },\n\n  computed: {\n    // Determine Whether the component is draggable\n    // Not allowed when resizing and drawling link\n    draggable() {\n      return !(this.resizingStatus);\n    },\n  },\n\n  components: {\n  },\n\n  watch: {\n      height(newVal) {\n          this.$store.dispatch('containerSizeChange', {'container': 'tableContainer', 'height': this.height})\n      }, \n  },\n};\n</script>\n\n<style scoped>\n.card-name {\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n\n\n.resizer {\n  position: absolute;\n}\n\n.resizer-r {\n  cursor: col-resize;\n  height: 100%;\n  right: -1%;\n  top: 0;\n  width: 5px;\n}\n\n/* Placed at the bottom side */\n.resizer-b {\n  bottom: -1%;\n  cursor: row-resize;\n  height: 5px;\n  left: 0;\n  width: 100%;\n}\n\n</style>                                                                   "]},"metadata":{},"sourceType":"module"}